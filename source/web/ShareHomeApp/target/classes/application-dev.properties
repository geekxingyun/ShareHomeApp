# 配置应用程序的端口
server.port=8080
#配置应用程序的上下文
server.servlet.context-path=/

# Spring Boot 日志
logging.level.org.springframework.data=DEBUG

# Spring MVC
# 排除静态资源,代码不动
spring.mvc.static-path-pattern=/static/**

# 热部署模块
#如果不想使用重启功能，可以使用spring.devtools.restart.enabled属性来禁用它
spring.devtools.restart.enabled=false
#与LiveReload一起使用时，自动重启的效果非常好。
spring.devtools.livereload.enabled=false
#是否禁用报告的日志记录
spring.devtools.restart.log-condition-evaluation-delta=false
#配置监视其他路径的更改
spring.devtools.restart.additional-paths=src/main/java
#某些资源（如静态资产和视图模板）不需要重新启动应用程序,设置排除
spring.devtools.restart.exclude=static/**

# thymeleaf 页面模板引擎配置
# 配置模板前缀
spring.thymeleaf.prefix=classpath:/templates/
# 配置模板后缀
spring.thymeleaf.suffix=.html
# 配置模板模式默认为XHTML
spring.thymeleaf.mode=HTML
# 配置模板字符编码
spring.thymeleaf.encoding=UTF-8
# 配置模板内容类型
spring.thymeleaf.servlet.content-type=text/html
# 是否使用模板缓存 关闭缓存，即时刷新，上线生产环境需改成true
spring.thymeleaf.cache=false

#Spring Data JPA
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/share_home_db?useSSL=false&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=xingyun
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1
# Spring Data JPA
spring.jpa.database=MYSQL
# 可选值create||create-drop||update||none
# create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表
# create-drop: 每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
# update：最常用的属性,第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库）
# 以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。
# 要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
# 表名的依据是@Entity注解的值或者@Table注解的值，sessionFactory关闭表不会删除
# 且下一次启动会根据实体model更新结构或者有新的实体类会创建新的表。
# none：启动时不做任何操作
spring.jpa.hibernate.ddl-auto=none
# 命名策略
# implicit naming strategy：在没有显式命名表或列以确定要使用的名称时使用
# physical naming strategy：用于将表或列的“逻辑名称”（隐式或显式）名称转换为物理名称（例如，遵循公司命名准则）
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# spring.jpa.hibernate.naming.implicit-strategy=
# old MySQL Version use the config as below
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# new MySQL 5 config version MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true

